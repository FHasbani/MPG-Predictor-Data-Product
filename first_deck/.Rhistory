utils:::menuInstallPkgs()
q()
install.packages(c("plyr", "digest", "ggplot2", "colorspace", "stringr", "RColorBrewer", "reshape2"))
install.packages(c("zoo", "scales", "car", "gtable"))
install.packages(c("Hmisc", "rJava", "mvtnorm", "bitops", "rgl", "foreign", "xml", "lattice"))
install.packages(c("e1071", "gtools", "sp", "gdata", "Rcpp", "MASS", "Matrix", "lmtest", "survival", "caTools"))
install.packages(c("multcomp", "RCurl", "knitr", "xtable", "xts", "rpart", "evaluate", "RODBC", "quadprog", "tseries"))
install.packages(c("DBI", "nlme", "lme4", "reshape", "sandwich", "leaps", "gplots", "abind", "randomForest"))
install.packages(c("Rcmdr", "coda", "maps", "igraph", "formatR", "maptools", "RSQLite", "psych", "KernSmooth"))
install.packages(c("rgdal", "RcppArmadillo", "effects", "sem", "vcd", "XLConnect", "markdown", "timeSeries"))
install.packages(c("timeDate", "RJSONIO", "cluster", "scatterplot3d", "nnet", "fBasics", "forecast", "quantreg"))
install.packages(c("foreach", "chron", "plotrix", "matrixcalc", "aplpack", "strucchange", "iterators", "mgcv"))
install.packages(c("kernlab", "SparseM", "tree", "robustbase", "vegan", "devtools", "modeltools", "xlsx", "slam"))
install.packages(c("TTR", "quantmod", "relimp", "akima", "memoise"))
install.packages(c("class", "codetools"))
install.packages("swirl")
shiny::runApp('R/Data Product Project')
shiny::runApp('R/Data Product Project')
shiny::runApp('R/Data Product Project')
shiny::runApp('R/Data Product Project')
shiny::runApp('R/Data Product Project')
shiny::runApp('R/Data Product Project')
shiny::runApp('R/Data Product Project')
shiny::runApp('R/Data Product Project')
shiny::runApp('R/Data Product Project')
shiny::runApp('R/Data Product Project')
shiny::runApp('R/Data Product Project')
suppressPackageStartupMessages(library(googleVis))
install.packages("googleVis")
suppressPackageStartupMessages(library(googleVis))
M <- gvisMotionChart(Fruits, "Fruit", "Year", options = list(width = 600, height = 400))
print(M, "chart")
G <- gvisGeoChart(Exports, locationvar = "Country", colorvar = "Profit", options = list(width =600, height = 400))
print(G, "chart")
plot(G, "chart")
df <- data.frame(label=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
Line <- gvisLineChart(df, xvar="label", yvar=c("val1","val2"),
options=list(title="Hello World", legend="bottom",
titleTextStyle="{color:'red', fontSize:18}",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'My Label', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'blue',targetAxisIndex:1}]",
vAxes="[{title:'Value 1 (%)', format:'##,######%'},
{title:'Value 2 (\U00A3)'}]",
curveType="function", width=500, height=300
))
print(Line, "chart")
install.packages("UsingR")
library("UsingR", lib.loc="~/R/R-3.1.1/library")
install.packages("HTMLUtils")
library("HTMLUtils", lib.loc="~/R/R-3.1.1/library")
library("htmltools", lib.loc="~/R/R-3.1.1/library")
M <- gvisMotionChart(Fruits, "Fruit", "Year", options = list(width = 600, height = 400))
print(M, "chart")
G <- gvisGeoChart(Exports, locationvar = "Country", colorvar = "Profit", options = list(width =600, height = 400))
print(G, "chart")
require(rCharts)
install(rCharts)
install.packages(c("aplpack", "boot", "devtools", "jsonlite", "MASS", "minqa", "multcomp", "nlme", "quantmod", "Rcmdr", "Rcpp", "rgl"))
install.packages(rCharts)
install.packages("RSelenium")
install.packages("rCharts")
install.packages("slidify")
library("devtools", lib.loc="~/R/R-3.1.1/library")
install.packages("devtools")
library("devtools")
library("slidify", lib.loc="~/R/R-3.1.1/library")
library("knitr", lib.loc="~/R/R-3.1.1/library")
library("devtools", lib.loc="~/R/R-3.1.1/library")
setwd("~/R/Shiny Project")
author("Slides")
View(df)
library("xlsx", lib.loc="~/R/R-3.1.1/library")
setwd("~/R/Data Product Project")
myfile <- ("Mobil-Video-Sell-Through.xls")
myfile <- ("Mobile-Video-Sell-Through.xls")
read.xlsx(myfile, sheetIndex, sheetName="Sept-Oct14TD", rowIndex=NULL, startRow=NULL, endRow=NULL, colIndex=NULL, as.data.frame=TRUE, header=TRUE, colClasses=NA, keepFormulas=FALSE, encoding="unknown")
clickData <- read.xlsx(myfile, sheetIndex, sheetName="Sept-Oct14TD", rowIndex=NULL, startRow=NULL, endRow=NULL, colIndex=NULL, as.data.frame=TRUE, header=TRUE, colClasses=NA, keepFormulas=FALSE, encoding="unknown")
View(clickData)
summary("clickData")
summary(clickData)
View(clickData)
str(clickData)
library("shiny", lib.loc="~/R/R-3.1.1/library")
View(clickData)
setwd("~/R/Data Product Project/first_deck")
library(rCharts)
install_github("rCharts", "ramnathv")
clickData <- read.xlsx(myfile, sheetIndex, sheetName="Sept-Oct14TD", rowIndex=NULL, startRow=NULL, endRow=NULL, colIndex=NULL, as.data.frame=TRUE, header=TRUE, colClasses=NA, keepFormulas=FALSE, encoding="unknown")
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$print('chart1')
nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
plot(clickData)
require(stats)
plot(cars)
lines(lowess(cars))
cars
library("ggplot2", lib.loc="~/R/R-3.1.1/library")
plot(x = clickData$Consumption.Date, y = clickData$Total.Consumed.Impressions)
lines(lowess(clickData))
library(ggvis)
install.packages("ggvis")
install.packages("dplyr")
library(ggvis)
library(dplyr)
clickData %>% ggvis(~Consumption.Date, ~Total.Consumed.Impressions) %>% layer_points(fill = ~factor(Site))
clickData %>% ggvis(~Consumption.Date, ~Total.Consumed.Impressions) %>% layer_bars()
clickData %>% ggvis(~Consumption.Date, ~Total.Consumed.Impressions) %>% layer_bars(fill = ~factor(Site))
clickData %>% ggvis(~factor(Site), ~Total.Consumed.Impressions) %>% layer_boxplots()
clickData %>% ggvis(~Consumption.Date, ~Total.Consumed.Impressions) %>% layer_points(fill = ~factor(Site)) %>% layer_lines()
clickData %>% ggvis(~Consumption.Date, ~Total.Consumed.Impressions) %>% layer_points(fill = ~factor(Site)) #%>% layer_lines()
